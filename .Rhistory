RTF_spread$WeekNum <- strftime(x, format = "%W")
head(RTF_spread)
#reorder cols
RTF_converted <- RTF_spread[,c(1,9,2,6,7,4,3,5,8)]
#sort by MM first, then by date
RTF_final <- RTF_converted[with(RTF_converted, order(MM, WW.Day)), ]
head(RTF_final)
View(RTF)
View(RTF)
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
#import data table and make the first row colnames
RTF <- tbl_df(CS89RTF1636.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#check it out
head(RTF)
str(RTF)
#Unite MM and forecast, gather dates as rows, separate MM and forecast, spread the forecast type as columns
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(.Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
#format WW.Day as a date
RTF_spread$.Date <- as.Date(RTF_spread$.Date, "%m-%d-%y")
x <- as.POSIXlt(RTF_spread$.Date)
RTF_spread$WeekNum <- strftime(x, format = "%W")
head(RTF_spread)
#reorder cols
RTF_converted <- RTF_spread[,c(1,9,2,6,7,4,3,5,8)]
#sort by MM first, then by date
RTF_final <- RTF_converted[with(RTF_converted, order(MM, .Date)), ]
head(RTF_final)
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
#import data table and make the first row colnames
RTF <- tbl_df(CS89RTF1636.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#check it out
head(RTF)
str(RTF)
#Unite MM and forecast, gather dates as rows, separate MM and forecast, spread the forecast type as columns
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
#format WW.Day as a date
RTF_spread$Date <- as.Date(RTF_spread$Date, "%m-%d-%y")
x <- as.POSIXlt(RTF_spread$Date)
RTF_spread$WeekNum <- strftime(x, format = "%W")
head(RTF_spread)
#reorder cols
RTF_converted <- RTF_spread[,c(1,9,2,6,7,4,3,5,8)]
#sort by MM first, then by date
RTF_final <- RTF_converted[with(RTF_converted, order(MM, Date)), ]
head(RTF_final)
OPA.MM.Info <- read.csv("~/PRF/RTF Comparison/OPA MM Info.csv", stringsAsFactors=FALSE)
View(OPA.MM.Info)
OPA <- tbl_df(OPA.MM.Info)
View(OPA)
View(OPA)
merge(x = RTF_final, y = OPA[,c("Intel.MM", "Product.Type", "Product.Code")], by = "Intel.MM", all.x = TRUE)
colnames(OPA)[1] <- "MM"
merge(x = RTF_final, y = OPA[,c("MM", "Product.Type", "Product.Code")], by = "MM", all.x = TRUE)
View(RTF_final)
RTF_OPA <- merge(x = RTF_final, y = OPA[,c("MM", "Product.Type", "Product.Code")], by = "MM", all.x = TRUE)
View(RTF_OPA)
#load packages
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
#----------------------------------------------------------------------------------------------------------------
#STEP1: first make the data frames to be used available and perform somecleaning of the columns
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(CS89RTF1636.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
#check it out
head(RTF)
str(RTF)
#----------------------------------------------------------------------------------------------------------------
#STEP 2: tidy up the RTF data file through transofrmations
#Unite MM and forecast, gather dates as rows, separate MM and forecast, spread the forecast type as columns
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
#----------------------------------------------------------------------------------------------------------------
#STEP 3: Format columns and add other columns needed for final output
#format Date as a date and insert a WWNum column
RTF_spread$Date <- as.Date(RTF_spread$Date, "%m-%d-%y")
x <- as.POSIXlt(RTF_spread$Date)
RTF_spread$WeekNum <- strftime(x, format = "%W")
#join porduct info into RTF table for better product visibility
RTF_OPA <- merge(x = RTF_final, y = OPA[,c("MM", "Product.Type", "Product.Code")], by = "MM", all.x = TRUE)
View(RTF_OPA)
View(RTF_spread)
OPA.MM.Info <- read.csv("~/PRF/RTF Comparison/OPA MM Info.csv", stringsAsFactors=FALSE)
View(OPA.MM.Info)
CS89RTF1636.tidy <- read.csv("C:/Users/jorgeten/Desktop/CPLG Rotations/Rotation 3 SPOe/Weekly Build Files/WW36/Officials/CS89RTF1636.tidy.csv", header=FALSE, stringsAsFactors=FALSE)
View(CS89RTF1636.tidy)
#load packages
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
#----------------------------------------------------------------------------------------------------------------
#STEP1: first make the data frames to be used available and perform somecleaning of the columns
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(CS89RTF1636.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
#check it out
head(RTF)
str(RTF)
#----------------------------------------------------------------------------------------------------------------
#STEP 2: tidy up the RTF data file through transofrmations
#Unite MM and forecast, gather dates as rows, separate MM and forecast, spread the forecast type as columns
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
#----------------------------------------------------------------------------------------------------------------
#STEP 3: Format columns and add other columns needed for final output
#format Date as a date and insert a WWNum column
RTF_spread$Date <- as.Date(RTF_spread$Date, "%m-%d-%y")
x <- as.POSIXlt(RTF_spread$Date)
RTF_spread$WeekNum <- strftime(x, format = "%W")
View(RTF_spread)
#join porduct info into RTF table for better product visibility
RTF_OPA <- merge(x = RTF_spread, y = OPA[,c("MM", "Product.Type", "Product.Code")], by = "MM", all.x = TRUE)
View(RTF_OPA)
RTF_converted <- RTF_OPA[,c(1,10,11,9,2,6,7,4,3,5,8)]
View(RTF_converted)
RTF_final <- RTF_converted[with(RTF_converted, order(MM, Date)), ]
View(RTF_final)
View(RTF_final)
str(RTF_final)
transform(RTF_final, PRFQTY = as.numeric(PRFQTY))
RTF_final <- transform(RTF_final, PRFQTY = as.numeric(PRFQTY))
head(RTF_final)
str(RTF_final)
RTF_final <- transform(RTF_final, PRFQTY = as.numeric(PRFQTY), RTFQTY = as.numeric(RTFQTY))
str(RTF_final)
RTF_final <- transform(RTF_final,
PRFQTY = as.numeric(PRFQTY),
RTFQTY = as.numeric(RTFQTY),
Delta = as.numeric(Delta),
CummDelta = as.numeric(CummDelta))
head(RTF_final)
str(RTF_final)
write.csv(RTF_final, file = "RTFWW36.csv")
View(RTF_converted)
View(RTF_final)
?strftime
str(RTF_final)
RTF_final <- transform(RTF_final,
PRFQTY = as.numeric(PRFQTY),
RTFQTY = as.numeric(RTFQTY),
Delta = as.numeric(Delta),
CummDelta = as.numeric(CummDelta),
WeekNum = as.numeric(WeekNum))
str(RTF_final)
RTF_final$WeekNum <- RTF_final[,WeekNum]+1
RTF_final$WeekNum <- RTF_final$WeekNum + 1
str(RTF_final)
head(RTF_final)
#load packages
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
#----------------------------------------------------------------------------------------------------------------
#STEP1: first make the data frames to be used available and perform somecleaning of the columns
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(CS89RTF1636.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
#check it out
head(RTF)
str(RTF)
#----------------------------------------------------------------------------------------------------------------
#STEP 2: tidy up the RTF data file through transofrmations
#Unite MM and forecast, gather dates as rows, separate MM and forecast, spread the forecast type as columns
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
#----------------------------------------------------------------------------------------------------------------
#STEP 3: Format columns and add other columns needed for final output
#format Date as a date and insert a WWNum column
RTF_spread$Date <- as.Date(RTF_spread$Date, "%m-%d-%y")
x <- as.POSIXlt(RTF_spread$Date)
RTF_spread$WeekNum <- strftime(x, format = "%W")
#join porduct info into RTF table for better product visibility
RTF_OPA <- merge(x = RTF_spread, y = OPA[,c("MM", "Product.Type", "Product.Code")], by = "MM", all.x = TRUE)
#reorder cols in logical order
RTF_converted <- RTF_OPA[,c(1,10,11,9,2,6,7,4,3,5,8)]
#sort by MM first, then by date
RTF_final <- RTF_converted[with(RTF_converted, order(MM, Date)), ]
RTF_final <- transform(RTF_final,
PRFQTY = as.numeric(PRFQTY),
RTFQTY = as.numeric(RTFQTY),
Delta = as.numeric(Delta),
CummDelta = as.numeric(CummDelta),
WeekNum = as.numeric(WeekNum))
RTF_final$WeekNum <- RTF_final$WeekNum + 1
str(RTF_final)
head(RTF_final)
#----------------------------------------------------------------------------------------------------------------
#STEP 4: all done! Just need to save the converted RTF as a CSV. Make sure to name it properly.
#save table as CSV
write.csv(RTF_final, file = "RTFWW36.csv")
CS89PRF1638.tidy <- read.csv("C:/Users/jorgeten/Desktop/CPLG Rotations/Rotation 3 SPOe/Weekly Build Files/WW38/Officials/R Files/CS89PRF1638.tidy.csv", header=FALSE, stringsAsFactors=FALSE)
View(CS89PRF1638.tidy)
#load packages
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
#----------------------------------------------------------------------------------------------------------------
#STEP1: first make the data frames to be used available and perform somecleaning of the columns
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(CS89PRF1638.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
#check it out
head(RTF)
str(RTF)
#----------------------------------------------------------------------------------------------------------------
#STEP 2: tidy up the RTF data file through transofrmations
#Unite MM and forecast, gather dates as rows, separate MM and forecast, spread the forecast type as columns
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
#----------------------------------------------------------------------------------------------------------------
#STEP 3: Format columns and add other columns needed for final output
#format Date as a date and insert a WWNum column
RTF_spread$Date <- as.Date(RTF_spread$Date, "%m-%d-%y")
x <- as.POSIXlt(RTF_spread$Date)
RTF_spread$WeekNum <- strftime(x, format = "%W")
#join porduct info into RTF table for better product visibility
RTF_OPA <- merge(x = RTF_spread, y = OPA[,c("MM", "Product.Type", "Product.Code")], by = "MM", all.x = TRUE)
#reorder cols in logical order
RTF_converted <- RTF_OPA[,c(1,10,11,9,2,6,7,4,3,5,8)]
#sort by MM first, then by date
RTF_final <- RTF_converted[with(RTF_converted, order(MM, Date)), ]
RTF_final <- transform(RTF_final,
PRFQTY = as.numeric(PRFQTY),
RTFQTY = as.numeric(RTFQTY),
Delta = as.numeric(Delta),
CummDelta = as.numeric(CummDelta),
WeekNum = as.numeric(WeekNum))
RTF_final$WeekNum <- RTF_final$WeekNum + 1
str(RTF_final)
head(RTF_final)
#----------------------------------------------------------------------------------------------------------------
#STEP 4: all done! Just need to save the converted RTF as a CSV. Make sure to name it properly.
#save table as CSV
write.csv(RTF_final, file = "PRFWW38.csv")
CS89PRF1638.tidy <- read.csv("C:/Users/jorgeten/Desktop/CPLG Rotations/Rotation 3 SPOe/Weekly Build Files/WW38/Officials/R Files/CS89PRF1638.tidy.csv", header=FALSE, stringsAsFactors=FALSE)
View(CS89PRF1638.tidy)
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(CS89PRF1638.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
View(RTF)
OPA.MM.Info <- read.csv("~/PRF/RTF Comparison/OPA MM Info.csv", stringsAsFactors=FALSE)
View(OPA.MM.Info)
IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(CS89PRF1638.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
head(RTF)
#Unite MM and forecast, gather dates as rows, separate MM and forecast, spread the forecast type as columns
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
#format Date as a date and insert a WWNum column
RTF_spread$Date <- as.Date(RTF_spread$Date, "%m-%d-%y")
x <- as.POSIXlt(RTF_spread$Date)
RTF_spread$WeekNum <- strftime(x, format = "%W")
#join porduct info into RTF table for better product visibility
RTF_OPA <- merge(x = RTF_spread, y = OPA[,c("MM", "Product.Type", "Product.Code")], by = "MM", all.x = TRUE)
#reorder cols in logical order
RTF_converted <- RTF_OPA[,c(1,10,11,9,2,6,7,4,3,5,8)]
#sort by MM first, then by date
RTF_final <- RTF_converted[with(RTF_converted, order(MM, Date)), ]
RTF_final <- transform(RTF_final,
PRFQTY = as.numeric(PRFQTY),
RTFQTY = as.numeric(RTFQTY),
Delta = as.numeric(Delta),
CummDelta = as.numeric(CummDelta),
WeekNum = as.numeric(WeekNum))
RTF_final$WeekNum <- RTF_final$WeekNum
head(RTF_final)
write.csv(RTF_final, file = "PRFWW38.csv")
OPA.MM.Info <- read.csv("~/PRF/RTF Comparison/OPA MM Info.csv", stringsAsFactors=FALSE)
View(OPA.MM.Info)
CS89PRF1638_Revised.tidy <- read.csv("C:/Users/jorgeten/Desktop/CPLG Rotations/Rotation 3 SPOe/Weekly Build Files/WW38/Officials/R Files/CS89PRF1638_Revised.tidy.csv", header=FALSE, stringsAsFactors=FALSE)
View(CS89PRF1638_Revised.tidy)
#load packages
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
#----------------------------------------------------------------------------------------------------------------
#STEP1: first make the data frames to be used available and perform somecleaning of the columns
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(CS89PRF1638_Revised.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
#check it out
head(RTF)
#Unite MM and forecast, gather dates as rows, separate MM and forecast, spread the forecast type as columns
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
CS89PRF1638_Revised.tidy <- read.csv("C:/Users/jorgeten/Desktop/CPLG Rotations/Rotation 3 SPOe/Weekly Build Files/WW38/Officials/R Files/CS89PRF1638_Revised.tidy.csv", header=FALSE, stringsAsFactors=FALSE)
View(CS89PRF1638_Revised.tidy)
OPA.MM.Info <- read.csv("~/PRF/RTF Comparison/OPA MM Info.csv", stringsAsFactors=FALSE)
View(OPA.MM.Info)
#load packages
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
#----------------------------------------------------------------------------------------------------------------
#STEP1: first make the data frames to be used available and perform somecleaning of the columns
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(CS89PRF1638_Revised.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
View(RTF)
OPA.MM.Info <- read.csv("~/PRF/RTF Comparison/OPA MM Info.csv", stringsAsFactors=FALSE)
View(OPA.MM.Info)
CS89PRF1638_Revised.tidy <- read.csv("C:/Users/jorgeten/Desktop/CPLG Rotations/Rotation 3 SPOe/Weekly Build Files/WW38/Officials/R Files/CS89PRF1638_Revised.tidy.csv", header=FALSE, stringsAsFactors=FALSE)
View(CS89PRF1638_Revised.tidy)
#STEP1: first make the data frames to be used available and perform somecleaning of the columns
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(CS89PRF1638_Revised.tidy)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
2: tidy up the RTF data file through transofrmations
#Unite MM and forecast, gather dates as rows, separate MM and forecast, spread the forecast type as columns
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
#format Date as a date and insert a WWNum column
RTF_spread$Date <- as.Date(RTF_spread$Date, "%m-%d-%y")
x <- as.POSIXlt(RTF_spread$Date)
RTF_spread$WeekNum <- strftime(x, format = "%W")
#join porduct info into RTF table for better product visibility
RTF_OPA <- merge(x = RTF_spread, y = OPA[,c("MM", "Product.Type", "Product.Code")], by = "MM", all.x = TRUE)
#reorder cols in logical order
RTF_converted <- RTF_OPA[,c(1,10,11,9,2,6,7,4,3,5,8)]
#sort by MM first, then by date
RTF_final <- RTF_converted[with(RTF_converted, order(MM, Date)), ]
RTF_final <- transform(RTF_final,
PRFQTY = as.numeric(PRFQTY),
RTFQTY = as.numeric(RTFQTY),
Delta = as.numeric(Delta),
CummDelta = as.numeric(CummDelta),
WeekNum = as.numeric(WeekNum))
RTF_final$WeekNum <- RTF_final$WeekNum
write.csv(RTF_final, file = "PRFWW38_Revised.csv")
input <- read.csv("C:/Users/jorgeten/Desktop/Tidy Project/input.csv", header=FALSE, stringsAsFactors=FALSE)
View(input)
OPA.MM.Info <- read.csv("C:/Users/jorgeten/Desktop/Tidy Project/OPA MM Info.csv", stringsAsFactors=FALSE)
View(OPA.MM.Info)
#STEP1: first make the data frames to be used available and perform somecleaning of the columns
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(input.csv)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
#check it out
head(RTF)
#load packages
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
#STEP1: first make the data frames to be used available and perform somecleaning of the columns
#IMPORT AND FORMAT RTF FILE
#import RTF data table and make the first row colnames
RTF <- tbl_df(input.csv)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
#check it out
head(RTF)
RTF <- tbl_df(input.csv)
RTF <- tbl_df(input)
colnames(RTF) = RTF[1,]
RTF = RTF[-1,]
#drop blank colnames
drops <- c("NA")
RTF <- RTF[ , !(names(RTF) %in% drops)]
#IMPORT OPA Product Info File
OPA <- tbl_df(OPA.MM.Info)
colnames(OPA)[1] <- "MM"
#check it out
head(RTF)
RTF_united <- RTF %>% unite(MM.Forecast, MM.Number, Forecast.Type, sep = "_")
RTF_gathered <- RTF_united %>% gather(Date, value, 2:40)
RTF_separated <- RTF_gathered %>% separate(MM.Forecast, c("MM", "Forecast.Type"))
RTF_spread <- RTF_separated %>%  spread(Forecast.Type, value)
#format Date as a date and insert a WWNum column
RTF_spread$Date <- as.Date(RTF_spread$Date, "%m-%d-%y")
x <- as.POSIXlt(RTF_spread$Date)
RTF_spread$WeekNum <- strftime(x, format = "%W")
#join porduct info into RTF table for better product visibility
RTF_OPA <- merge(x = RTF_spread, y = OPA[,c("MM", "Product.Type", "Product.Code")], by = "MM", all.x = TRUE)
#reorder cols in logical order
RTF_converted <- RTF_OPA[,c(1,10,11,9,2,6,7,4,3,5,8)]
#sort by MM first, then by date
RTF_final <- RTF_converted[with(RTF_converted, order(MM, Date)), ]
RTF_final <- transform(RTF_final,
RTF_final <- transform(RTF_final,
PRFQTY = as.numeric(PRFQTY),
RTFQTY = as.numeric(RTFQTY),
Delta = as.numeric(Delta),
CummDelta = as.numeric(CummDelta),
WeekNum = as.numeric(WeekNum))
RTF_final$WeekNum <- RTF_final$WeekNum
str(RTF_final)
RTF_final <- RTF_converted[with(RTF_converted, order(MM, Date)), ]
RTF_final <- transform(RTF_final,
PRFQTY = as.numeric(PRFQTY),
RTFQTY = as.numeric(RTFQTY),
Delta = as.numeric(Delta),
CummDelta = as.numeric(CummDelta),
WeekNum = as.numeric(WeekNum))
RTF_final$WeekNum <- RTF_final$WeekNum
str(RTF_final)
head(RTF_final)
write.csv(RTF_final, file = "output.csv")
CS89RTF1638_Untouched <- read.csv("C:/Users/jorgeten/Desktop/CPLG Rotations/Rotation 3 SPOe/Weekly Build Files/WW38/Officials/R Files/CS89RTF1638_Untouched.csv", header=FALSE, stringsAsFactors=FALSE)
View(CS89RTF1638_Untouched)
